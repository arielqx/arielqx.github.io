#| eval=FALSE
#| out.width="50%"
#| fig-align: center
knitr::include_graphics("about.jpg")
#| eval: FALSE
#| out.width: "50%"
#| fig-align: center
knitr::include_graphics("about.jpg")
#| eval: TRUE
#| out.width: "50%"
#| fig-align: center
knitr::include_graphics("about.jpg")
setwd("C:/Users/Ariel/Downloads/nus/y2s1/nm2207/New Repository/Github-Folder/Week-9-Submission")
setwd("C:/Users/Ariel/OneDrive/Documents/arielqx.github.io/arielqx.github.io")
knitr::opts_chunk$set(echo = TRUE)
install.packages("arthistory")
#install.package("devtools")
devtools::install_github("saralemus7/arthistory")
install.package("devtools")
install.packages("devtools")
devtools::install_github("saralemus7/arthistory")
glimpse(arthistory)
glimpse("arthistory")
View("arthistory")
View(arthistory)
View(arthistory)
View(arthistory)
View(arthistory)
str(arthistory)
View(worksjanson)
View(worksgardner)
View("worksgardner")
setwd("C:/Users/Ariel/Downloads/nus/y2s1/nm2207/New Repository/Github-Folder/Week-10")
soccer <- read.csv("soccer21-22.csv")
head(soccer)
## Reading the weekly rankings of the FCs
weeklyrank <- read.csv("weeklyrank.csv")
head(weeklyrank)
View(soccer)
View(weeklyrank)
setwd("C:/Users/Ariel/Downloads/nus/y2s1/nm2207/New Repository/Github-Folder/Week-10")
setwd("~/arielqx.github.io/arielqx.github.io")
time_series_transmission <-
tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
ggplot(data, aes(x=state,y=(data $actuals$casespopulation))) + geom_bar(stat="identity") + labs(x="States",y="Infected (%)")+theme_bw()
ggplot(data, aes(x=state,y=(data $actuals$casespopulation))) + geom_bar(stat="identity") +
labs(x="States",y="Infected(%)")+theme_bw()
ggplot(data, aes(x=state,y=(data$actuals$casespopulation))) + geom_bar(stat="identity") +
labs(x="States",y="Infected(%)")+theme_bw()
library(httr)
library(jsonlite)
library(tidyverse)
library(ggplot2)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=aee461090f09499f86335e3630089532"
raw_data <- GET(historic_state_data_url)
data <- fromJSON(rawToChar(raw_data$content))
glimpse(data)
time_series<-data %>%
unnest(actualsTimeseries)
time_series_transmission <-
tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="DC")]]$cdcTransmissionLevel
print(head(time_series_transmission))
# New data-frame with dates
time_series_cases <- list(Alaska = time_series %>% filter(state=="AK") %>% select(date,cases))
# Cases of each state
time_series_cases$California  <- time_series %>% filter(state=="CA") %>% select(date,cases)
time_series_cases$New_Jersey  <- time_series %>% filter(state=="NJ") %>% select(date,cases)
time_series_cases$Tennessee  <- time_series %>% filter(state=="TN") %>% select(date,cases)
time_series_cases$District_of_Columbia  <- time_series %>% filter(state=="DC") %>% select(date,cases)
ggplot(data, aes(x=state,y=population)) + geom_bar(stat="identity") +labs(x="States",y="Population") + theme_bw()
ggplot(data, aes(x=state,y=(data$actuals$casespopulation))) + geom_bar(stat="identity") +
labs(x="States",y="Infected(%)")+theme_bw()
time_series_transmission[seq(1,1300,by=100),]%>%
pivot_longer(cols=Alaska:District_of_Columbia,names_to="Countries",values_to="Transmission") %>%
ggplot(aes(x=Date,y=Transmission,colour=Countries,group=Countries)) +    geom_point(show.legend=TRUE) + labs(x="Date",y="Transmission Level") + theme_bw()
data_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)], Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],Date_California = time_series_cases$California$date[seq(1,1300,by=100)],Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],        Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],      Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],           Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])
data_to_plot
install.packages("cowplot", repos = "http://cran.us.r-project.org")
library(cowplot)
fig1 <- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +  geom_point() + labs(x="Date",y="Cases", title="Alaska") + theme_bw()
fig2 <- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +  geom_point() + labs(x="Date",y="Cases", title="California") + theme_bw()
fig3 <- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +  geom_point() + labs(x="Date",y="Cases", title="New Jersey") + theme_bw()
fig4 <- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +  geom_point() + labs(x="Date",y="Cases", title="Tennessee") + theme_bw()
fig5 <- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +  geom_point() + labs(x="Date",y="Cases", title="District of Columbia") + theme_bw()
plot_grid(fig1 + theme(legend.justification = c(0,1)),  fig2 + theme(legend.justification = c(1,0)),  fig3 + theme(legend.justification = c(0,1)),  fig4 + theme(legend.justification = c(1,0)),  fig5 + theme(legend.justification = c(0,1)),  align = "v", axis = "lr", nrow=3, ncol = 2,labels = LETTERS [1:5 ], rel_heights = c(1,2))
new_resolution  <-  plot_grid(
fig1 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),
fig2 + theme(legend.justification = c(1, 0), axis.text.x = element_text(size = 3)),
fig3 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),
fig4 + theme(legend.justification = c(1, 0), axis.text.x = element_text(size = 3)),
fig5 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)), align = "v", axis = "lr", nrow = 3, ncol = 2, labels = LETTERS [1:5 ], rel_heights = c(40, 50)  )
ggsave("new_resolution.png", new_resolution, width = 10, height = 8, units = "in")
# Modify the color for each plot using the fill color for points as an example
fig1 <- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +  geom_point(color="royalblue", shape=8) + labs(x="Date",y="Cases", title="Alaska")
fig2 <- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +  geom_point(color="darkseagreen4", shape=8) + labs(x="Date",y="Cases", title="California")
fig3 <- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +  geom_point(color="darkorchid4", shape=8) + labs(x="Date",y="Cases", title="New Jersey")
fig4 <- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +  geom_point(color="hotpink", shape=8) + labs(x="Date",y="Cases", title="Tennessee")
fig5 <- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +  geom_point(color="coral", shape=8) + labs(x="Date",y="Cases", title="District of Columbia")
new_with_colors  <-  plot_grid(  fig1 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),  fig2 + theme(legend.justification = c(1, 0), axis.text.x = element_text(size = 3)),  fig3 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),  fig4 + theme(legend.justification = c(1, 0), axis.text.x = element_text(size = 3)),  fig5 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),  align = "v", axis = "lr", nrow = 3, ncol = 2, labels = LETTERS [1:5 ], rel_heights = c(40, 50)  )
# Save the combined plot with increased size
ggsave("new_with_colors.png", new_with_colors, width = 10, height = 8, units = "in")
new_with_colors
#| eval: TRUE
#| out.width: "50%"
#| fig-align: center
knitr::include_graphics("new_with_colors.png")
# Modify the color for each plot using the fill color for points as an example
fig1 <- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +  geom_point(color="royalblue", shape=8) + labs(x="Date",y="Cases", title="Alaska")  + scale_x_discrete(guide = guide_axis(angle = 90))
fig2 <- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +  geom_point(color="darkseagreen4", shape=8) + labs(x="Date",y="Cases", title="California")  + scale_x_discrete(guide = guide_axis(angle = 90))
fig3 <- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +  geom_point(color="darkorchid4", shape=8) + labs(x="Date",y="Cases", title="New Jersey")  + scale_x_discrete(guide = guide_axis(angle = 90))
fig4 <- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +  geom_point(color="hotpink", shape=8) + labs(x="Date",y="Cases", title="Tennessee") + scale_x_discrete(guide = guide_axis(angle = 90))
fig5 <- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +  geom_point(color="coral", shape=8) + labs(x="Date",y="Cases", title="District of Columbia")  + scale_x_discrete(guide = guide_axis(angle = 90))
new_with_colors  <-  plot_grid(  fig1 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),  fig2 + theme(legend.justification = c(1, 0), axis.text.x = element_text(size = 3)),  fig3 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),  fig4 + theme(legend.justification = c(1, 0), axis.text.x = element_text(size = 3)),  fig5 + theme(legend.justification = c(0, 1), axis.text.x = element_text(size = 3)),  align = "v", axis = "lr", nrow = 3, ncol = 2, labels = LETTERS [1:5 ], rel_heights = c(40, 50)  )
# Save the combined plot with increased size
ggsave("new_with_colors.png", new_with_colors, width = 10, height = 8, units = "in")
#| eval: TRUE
#| out.width: "100%"
#| fig-align: center
knitr::include_graphics("new_with_colors.png")
